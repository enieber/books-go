definitions:
  models.ProductInput:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  models.ProductReturn:
    properties:
      externtal_id:
        type: string
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  models.SalesInput:
    properties:
      id_product:
        type: integer
      id_user:
        type: integer
    type: object
  models.TransactionInput:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  models.TransactionReturn:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  models.UserInput:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  models.UserReturn:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/products:
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: ProductInput to create
        in: body
        name: createBook
        required: true
        schema:
          $ref: '#/definitions/models.ProductInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductReturn'
      summary: Create Product
      tags:
      - products
  /api/v1/sales/buy:
    post:
      consumes:
      - application/json
      description: Buy Product
      parameters:
      - description: SalesInput to Buy
        in: body
        name: buyproduct
        required: true
        schema:
          $ref: '#/definitions/models.SalesInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionReturn'
      summary: Buy Product
      tags:
      - sales
  /api/v1/sales/payment:
    put:
      consumes:
      - application/json
      description: update status of transaction when payment updated
      parameters:
      - description: TransactionInput to update paymnentOk
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionReturn'
      summary: Update Payment
      tags:
      - sales
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: UserInput to create
        in: body
        name: createBook
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserReturn'
      summary: Create User
      tags:
      - users
swagger: "2.0"
