definitions:
  models.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.CreateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    required:
    - author
    - title
    type: object
  models.Product:
    properties:
      externtal_id:
        type: string
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  models.ProductInput:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  models.UpdateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      externtal_id:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.UserInput:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/books:
    get:
      consumes:
      - application/json
      description: List books from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create book
      parameters:
      - description: CreateBookInput to create
        in: body
        name: createBook
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: Create book
      tags:
      - books
  /api/v1/books/{id}:
    delete:
      consumes:
      - application/json
      description: Deleted book
      parameters:
      - description: id of book
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Deleted book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: books from database
      parameters:
      - description: id of book
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: find all books
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: Update book
      parameters:
      - description: id of book
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateBookInput to create
        in: body
        name: UpdateBookInput
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: Update book
      tags:
      - books
  /api/v1/products:
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: ProductInput to create
        in: body
        name: createBook
        required: true
        schema:
          $ref: '#/definitions/models.ProductInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create Product
      tags:
      - products
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: UserInput to create
        in: body
        name: createBook
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create User
      tags:
      - users
swagger: "2.0"
